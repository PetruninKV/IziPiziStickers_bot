import config
import telebot
from telebot import types
from rembg import remove
from PIL import Image
import io
import requests
import tempfile


bot = telebot.TeleBot(config.token)


@bot.message_handler(commands=['start'])
def start(message):
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    botton1 = types.KeyboardButton('–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ')
    botton2 = types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
    botton3 = types.KeyboardButton('–ê —ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ?')
    botton4 = types.KeyboardButton('–¢—ã –≥–¥–µ –≤–æ–æ–±—â–µ –µ—Å—Ç—å?')
    markup.add(botton1, botton2, botton3, botton4)

    start_mess = f'–í–æ–∑–¥—É—à–Ω—ã–π –≥–∞–º–∞—Ä–¥–∂–æ–±–∞, <b>{message.from_user.first_name}</b>!\n–û—Ç –º–æ–µ–≥–æ —Å–µ—Ä–¥–µ—á–∫–∞ —Ç–≤–æ–µ–º—É –¥—É—à–µ–≤–Ω–æ –≤ –¥—É—à—É! üá¨üá™'
    bot.send_message(message.chat.id, start_mess, parse_mode='html', reply_markup=markup)
    bot.send_sticker(message.chat.id, config.Sti—Åker_id.stick_welcome)


@bot.message_handler(content_types=['text'])
def answer_text(message):
    if message.text == '–¢—ã –≥–¥–µ –≤–æ–æ–±—â–µ –µ—Å—Ç—å?':
        bot.send_location(message.chat.id, 41.64207, 41.61689)
        bot.send_message(message.chat.id, '—è –∑–¥–µ—Å—å, –ª—é–±–∏–º–∫–∞ ‚ù§Ô∏è')

    elif message.text == '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è':
        bot.send_message(message.chat.id, '–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é —Ç–≤–æ–∏ —Ñ–æ—Ç–æ. –ê –∏–º–µ–Ω–Ω–æ - —É–±–∏—Ä–∞—é —Ñ–æ–Ω, –¥–µ–ª–∞—é –Ω—É–∂–Ω—ã–π —Ä–∞–∑–º–µ—Ä. –í–æ—Ç –ø—Ä–∏–º–µ—Ä:')
        with open('./test_foto/photo.jpg', 'rb') as photo:
            bot.send_photo(message.chat.id, photo,  caption='–¢—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å –º–Ω–µ –æ–±—ã—á–Ω–æ–µ —Ñ–æ—Ç–æ')    
        with open('./test_foto/for_stick_file.png', 'rb') as photo:
            bot.send_document(message.chat.id, photo, caption='—è —Ç–µ–±–µ –≤–æ–∑–≤—Ä–∞—â–∞—é —Ñ–∞–π–ª  –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–∞')        

    elif message.text == '–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ':
        mes = """–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –Ω–∞–±–æ—Ä —Å–æ —Å–≤–æ–∏–º–∏ —Å—Ç–∏–∫–µ—Ä–∞–º–∏, —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –º–æ–µ–º—É –±—Ä–∞—Ç–∏—à–∫–µ @Stickers. –¢–∞–º –≤—Å–µ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ:
        - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å —Ñ–æ—Ç–æ
        - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å–º–∞–π–ª–∏–∫
        - –≤—É–∞–ª—è!
–ù–æ –µ—Å—Ç—å –Ω—é–∞–Ω—Å. <b>–§–æ—Ç–æ –¥–ª—è –±—É–¥—É—â–µ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞</b> ‚Äî <i>—Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG –∏–ª–∏ WEBP —Å –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º —Ñ–æ–Ω–æ–º. –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –≤–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –≤ –∫–≤–∞–¥—Ä–∞—Ç 512x512</i>.
–ü–æ—ç—Ç–æ–º—É —è —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ç–≤–æ–µ —Ñ–æ—Ç–æ –¥–ª—è —Å—Ç–∏–∫–µ—Ä–∞.
–ù–∞–∂–º–∏ –Ω–∞ '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–∏–º–µ—Ä.
        """
        bot.send_message(message.chat.id, mes, parse_mode='html')

    elif message.text == '–ê —ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ?':
        mes1 = """–Ø volvo —Å—Ä–µ–¥–∏ –∞–≤—Ç–æ
–Ø pfizer –∏–∑ –≤—Å–µ—Ö –≤–∞–∫—Ü–∏–Ω
–Ø –¥—é—Ä–µ–∫—Å –≤ –º–∏—Ä–µ —Å–µ–∫—Å–∞"""
        mes2 = """–ú–æ–π –∫–æ–¥ —É—Å—Ç—Ä–æ–µ–Ω —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ —è –Ω–µ —Ö—Ä–∞–Ω—é –≤–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∞ –ª–∏—à—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∏—Ö –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é –æ–±—Ä–∞—Ç–Ω–æ. 
–ú–æ–∂–µ—à—å –≤ —ç—Ç–æ–º —É–±–µ–¥–∏—Ç—å—Å—è, –ø–æ—Å–º–æ—Ç—Ä–µ–≤ –∏—Å—Ö–æ–¥–Ω–∏–∫ –∫–æ–¥–∞:"""
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('–ñ–º–∞–∫ —Å—é–¥–∞', url='https://github.com/PetruninKV'))
        bot.send_message(message.chat.id, mes1)
        bot.send_message(message.chat.id, mes2, reply_markup=markup)

    else:
        bot.send_message(message.chat.id, '–ù–µ –ø–æ–Ω–∏–º–∞—Ç—å —Ç–µ–±—è. –ü–æ–∫–∞ —á—Ç–æ —è –Ω–µ —Ç–∞–∫–æ–π —É–º–Ω—ã–π –∫–∞–∫ ChapGPT.')
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('–í–æ—Ç –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å', url='https://chat.openai.com'))
        bot.send_message(message.chat.id, '–ï—Å–ª–∏ —Ö–æ—á–µ—Ç—Å—è –ø–æ–±–æ–ª–∞—Ç—å —Å —É–º–Ω—ã–º:', reply_markup=markup)


@bot.message_handler(content_types=['document'])
def get_user_document(message):
    bot.send_message(message.chat.id, 'TypeError. –ü—Ä–∏—à–ª–∏ –º–Ω–µ –∏–º–µ–Ω–Ω–æ —Ñ–æ—Ç–æ, –Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç.')


@bot.message_handler(content_types=['photo'])
def get_user_foto(message):
    bot.send_message(message.chat.id, '–≤–∞—É, –∫–∞–∫–æ–µ —Ñ–æ—Ç–æ!')
    file_info = bot.get_file(message.photo[-1].file_id)
    file_url = f'https://api.telegram.org/file/bot{bot.token}/{file_info.file_path}'
    file_content = requests.get(file_url).content
    
    bot.send_message(message.chat.id, '<i>–∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞...</i> üí°', parse_mode='html')
    bot.send_sticker(message.chat.id, config.Sti—Åker_id.stick_processing)

    output_file = remove(file_content) 

    im = Image.open(io.BytesIO(output_file))
    weight, height = im.size
    if weight <= 512 and height <= 512:
        new_weight = weight
        new_height = height
    else:
        if weight == height:
            new_weight = 512
            new_height = 512
        elif weight > height:
            new_weight = 512
            new_height = int(512 * height/weight)
        else:
            new_weight = int(512  * weight / height)
            new_height = 512
    output_image = im.resize((new_weight, new_height))   

    markup2 = types.InlineKeyboardMarkup()
    markup2.add(types.InlineKeyboardButton('–ü–µ—Ä–µ—à–ª–∏ —Ñ–æ—Ç–æ @Stickers', switch_inline_query='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è' ))  

    with tempfile.NamedTemporaryFile(prefix='for_stick_file_', suffix='.png') as temp:
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        output_image.save(temp.name)
        with open(temp.name, 'rb') as f:
            bot.send_document(message.chat.id, f, caption='–ì–æ—Ç–æ–≤–æ!', reply_markup=markup2)
          

bot.polling(none_stop=True)